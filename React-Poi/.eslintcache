[{"C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\index.js":"1","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\App.js":"2","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\reportWebVitals.js":"3","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\Home.js":"4","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\HubPage.js":"5","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\entryhubview.js":"6","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\profilesummary.js":"7","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\entrydetailsview.js":"8","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\statsbar.js":"9","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\accountbar.js":"10","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\newpersonpopup.js":"11","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\Newentrypopup.js":"12","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\Confirmbreachpopup.js":"13","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\ContactsPopup.js":"14","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\Createcontactspopup.js":"15","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\profileviewheader.js":"16","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\profileviewchild.js":"17","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\contactschild.js":"18","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\Contactschild.js":"19","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\Entrylistingchild.js":"20","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\ErrorDialog.js":"21","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\SuccessDialog.js":"22"},{"size":500,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":446,"mtime":1610793890626,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":6586,"mtime":1611402514024,"results":"27","hashOfConfig":"24"},{"size":10265,"mtime":1611400894553,"results":"28","hashOfConfig":"24"},{"size":1753,"mtime":1610949943222,"results":"29","hashOfConfig":"24"},{"size":4113,"mtime":1611389694670,"results":"30","hashOfConfig":"24"},{"size":1830,"mtime":1611392574855,"results":"31","hashOfConfig":"24"},{"size":2376,"mtime":1611400896292,"results":"32","hashOfConfig":"24"},{"size":850,"mtime":1610697627677,"results":"33","hashOfConfig":"24"},{"size":3413,"mtime":1611394101457,"results":"34","hashOfConfig":"24"},{"size":2738,"mtime":1611395594717,"results":"35","hashOfConfig":"24"},{"size":710,"mtime":1610697002332,"results":"36","hashOfConfig":"24"},{"size":2291,"mtime":1611401248208,"results":"37","hashOfConfig":"24"},{"size":1303,"mtime":1611401269022,"results":"38","hashOfConfig":"24"},{"size":1587,"mtime":1611308249077,"results":"39","hashOfConfig":"24"},{"size":902,"mtime":1611304768598,"results":"40","hashOfConfig":"24"},{"size":232,"mtime":1610880852618,"results":"41","hashOfConfig":"24"},{"size":680,"mtime":1611402054345,"results":"42","hashOfConfig":"24"},{"size":202,"mtime":1610949755359,"results":"43","hashOfConfig":"24"},{"size":544,"mtime":1611394755377,"results":"44","hashOfConfig":"24"},{"size":501,"mtime":1611394761660,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1ho36rh",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\index.js",[],["98","99"],"C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\App.js",[],"C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\reportWebVitals.js",[],"C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\Home.js",["100","101","102","103","104","105","106","107","108","109","110","111","112","113","114"],"import React , {useState , useRef} from 'react'\r\n\r\n\r\n\r\nclass Client{\r\n    login_status_check(email,result){\r\n        if(result.status == \"AUTHED\"){ \r\n            localStorage.setItem(\"POIEMAIL\", email );\r\n            localStorage.setItem(\"POITOKEN\",result.auth_token );\r\n            window.location.replace(\"http://localhost:3000/accounts/\"+email);\r\n        }\r\n        else{\r\n            //popup\r\n        }\r\n    }\r\n\r\n    sign_up_status_check(result){\r\n        if(result.status == \"success\"){\r\n            //popup\r\n        }\r\n        else{\r\n            //popup\r\n        }\r\n\r\n    }\r\n\r\n    async  login_or_signup(email,code,type){\r\n        if(type == \"login\"){\r\n            const url = \"http://localhost:8020/login\";\r\n            const login_options = {\r\n                method : \"POST\",\r\n                body : JSON.stringify({email:email,code:code}),\r\n                headers: { \"Content-Type\": \"application/json\" }};\r\n            const result = await this.fetch_and_respond(login_options,url); \r\n            console.log(result)\r\n            this.login_status_check(email,result);\r\n        }\r\n        else{\r\n            const url = \"http://localhost:8020/signup\";\r\n            const sign_up_options = {\r\n            method : \"POST\",\r\n            body : JSON.stringify({email:email,code:code}),\r\n            headers: { \"Content-Type\": \"application/json\" }}\r\n            const result = await this.fetch_and_respond(sign_up_options,url); \r\n\r\n            this.sign_up_status_check(result);\r\n        }\r\n    }\r\n\r\n        \r\n    \r\n\r\n    async fetch_and_respond(options,url){\r\n        const response = await  fetch(url,options);\r\n        const data = await response.json();\r\n        return data  ;\r\n    }\r\n}\r\n\r\n\r\nexport default function HomePage() {\r\n    var client = new Client();\r\n    const code_input_ref = useRef();\r\n    const email_input_ref = useRef();\r\n    var sign_up_code_input_ref = useRef();\r\n    var sign_up_email_input_ref = useRef();\r\n    const [sign_up_state, change_sign_up_state] = useState(false);\r\n    const [login_state, change_login_state] = useState(false);\r\n    const [auth_entry_state, change_auth_entry_state] = useState(false);\r\n\r\n    return (\r\n<>\r\n<div id=\"TopBar\">\r\n    <h1 id=\"main-label\">PERSONS OF INTEREST</h1>\r\n    <img id=\"rotation\" src=\"/Images/rotation.jpg\"></img>\r\n    <img id=\"rotation2\" src=\"/Images/buttonlogo.jpg\"></img>\r\n    <button onClick={()=>{\r\n        change_sign_up_state(prev=>{\r\n            return true;\r\n        })\r\n        change_auth_entry_state(prev=>{\r\n            return true;\r\n        })\r\n    }\r\n        \r\n    }  id=\"sign_up\">SIGN UP</button>\r\n    <button onClick = {()=>{\r\n        change_login_state(prev =>{\r\n            return true;\r\n        })\r\n        change_auth_entry_state(prev=>{\r\n            return true;\r\n        })\r\n    \r\n    }\r\n    } id=\"sign_in\">SIGN IN</button>\r\n    <hr id = \"TopLine\"></hr>\r\n \r\n\r\n</div>\r\n\r\n<img id=\"finch_image\" src=\"/Images/finch.png\"></img>\r\n<h1 id=\"LuringMessage\">Want to Build Profiles On Suspicious Persons?</h1>\r\n\r\n<div id=\"usage\">\r\n    <img id=\"usageicon\" src=\"../Images/usageicon.png\"></img>\r\n    <p id=\"usage_desc\">This Site allows you to build Profiles\r\n        on persons of interest! Use this tool to\r\n        remotely keep tabs on Suspicious persons.\r\n        This application does not support social events\r\n        for the sake of security.\r\n    </p>\r\n    \r\n\r\n\r\n</div>\r\n<div id=\"versions\">\r\n    <img id=\"versionsicon\" src=\"/Images/threeversions.png\"></img>\r\n    <p id=\"version_desc\">\r\n        The Persons of interest software collection \r\n        has three different applications: The web version[this one],\r\n        the local desktop version , and the remote desktop version.\r\n        Click <a href=\"https://github.com/RonaldColyar/POI\"> Here</a>\r\n        to view the other versions!\r\n    </p>\r\n    \r\n    \r\n</div>\r\n<div id=\"systems\">\r\n    <img id=\"systemicon\" src=\"/Images/systemslogo.png\"></img>\r\n    <p id=\"system_desc\">\r\n        Persons of interest(Web) uses secure systems \r\n        and microservices from trusted software companies\r\n        to safely store your person[s] data. The storing of \r\n        this data is anonymous. \r\n    </p>\r\n\r\n</div>\r\n<div id=\"auth_entries\" style = {{display:(auth_entry_state? \"block\":\"none\")}}>\r\n    <div id=\"sign_in_inner\" style = {{display:(login_state? \"block\":\"none\")}}>\r\n        <input className=\"entries\" ref = {email_input_ref} id=\"email_entry\"  placeholder=\"Email..\" ></input>\r\n        <input className=\"entries\" ref = {code_input_ref}  id=\"code_entry\" type=\"password\" placeholder=\"Special Code..\"></input>\r\n        <button onClick = {()=>{\r\n            if (\r\n                email_input_ref.current.value == \"\"||\r\n                code_input_ref.current.value == \"\"\r\n            ) {\r\n                //pop up error\r\n            }\r\n            else{\r\n                \r\n            client.login_or_signup(\r\n                email_input_ref.current.value,\r\n                code_input_ref.current.value,\r\n                \"login\")}   \r\n            }\r\n        \r\n        }  \r\n            \r\n            id=\"check_login\" >Login</button>\r\n        <img src=\"/Images/authlogo.png\" id=\"login_rotation\"></img>\r\n        <button onClick = {()=>{\r\n            change_login_state(prev=>{return false;})\r\n            change_auth_entry_state(prev=>{return false;;})}}  id=\"close_login\">X</button>\r\n\r\n    </div>\r\n    <div id=\"sign_up_inner\" style = {{display:(sign_up_state? \"block\":\"none\")}} >\r\n        <input className=\"entries\" ref = {sign_up_email_input_ref} id=\"signup_email_entry\"  placeholder=\"Email..\" ></input>\r\n        <input className=\"entries\" ref = {sign_up_code_input_ref} id=\"Special_Code\" type=\"password\" placeholder=\"Special Verification Code..\"></input>\r\n        <button id=\"check_signup\" onClick = {\r\n            ()=>{\r\n                if ( sign_up_email_input_ref.current.value == \"\"||\r\n                     sign_up_code_input_ref.current.value == \"\") {\r\n                    //popup issue\r\n                }\r\n                else{\r\n                    client.login_or_signup(\r\n                        sign_up_email_input_ref.current.value,\r\n                        sign_up_code_input_ref.current.value,\"sign_up\")\r\n                }\r\n                    } }\r\n        >Sign Up\r\n        </button>\r\n        <img src=\"/Images/authlogo.png\" id=\"signup_rotation\"></img>\r\n        <button id=\"close_signup\" onClick = {()=>{\r\n            change_sign_up_state(prev =>{\r\n                return false;\r\n            })\r\n            change_auth_entry_state(prev=>{return false;})\r\n        }\r\n        }> X</button>\r\n    </div>\r\n   \r\n\r\n\r\n\r\n</div>\r\n</>\r\n    )\r\n}\r\n","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\HubPage.js",["115","116","117","118","119","120","121","122","123"],"import React , {useState,useEffect} from 'react'\r\nimport Accountbar from './accountbar'\r\nimport Confirmbreachpopup from './Confirmbreachpopup'\r\nimport ContactsPopup from './ContactsPopup'\r\nimport Createcontactspopup from './Createcontactspopup'\r\nimport DetailsView from './entrydetailsview'\r\nimport Entryhubview from './entryhubview'\r\nimport ErrorDialog from './ErrorDialog'\r\nimport Newentrypopup from './Newentrypopup'\r\nimport Newpersonpopup from './newpersonpopup'\r\nimport Profilesummary from './profilesummary'\r\nimport Profileviewheader from './profileviewheader'\r\nimport StatsBar from './statsbar'\r\nimport SuccessDialog from './SuccessDialog'\r\n\r\nclass Client{\r\n    constructor(params,modify_success_dialog,modify_error_dialog){\r\n        this.params = params\r\n        this.email = params.match.params.email;\r\n        this.token = localStorage.getItem(\"POITOKEN\");\r\n        this.success_modifier = modify_success_dialog;\r\n        this.error_modifier = modify_error_dialog;\r\n    \r\n    }\r\n \r\n    async fetch_and_respond(options,url){\r\n        const response = await  fetch(url,options)\r\n        const data = await response.json()\r\n        return data  \r\n    }\r\n    logout(){\r\n        const options = {\r\n            method: \"POST\",\r\n            body : JSON.stringify({\r\n                email:this.email,\r\n                token:this.token\r\n            }),\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        }\r\n        return  this.fetch_and_respond(options,\"http://localhost:8020/logout\")\r\n    }\r\n    change_code(data){\r\n        data.token = this.token;\r\n        data.email = this.email;\r\n        const options = {method:\"POST\",body:JSON.stringify(data), headers: { \"Content-Type\": \"application/json\" }}\r\n        return  this.fetch_and_respond(options,\"http://localhost:8020/change-code\")\r\n    }\r\n    profile_data(){\r\n        const url = \"http://localhost:8020/userprofiledata/\" + this.email+\"/\"+this.token\r\n        const options = {method:\"GET\"} ;\r\n        return  this.fetch_and_respond(options,url)\r\n    }\r\n\r\n    create_new_person_or_entry(data,url,method){\r\n        data.token =this.token;\r\n        data.email = this.email;\r\n        const options = { method : method, body :JSON.stringify(data), headers: { \"Content-Type\": \"application/json\" }};\r\n        return this.fetch_and_respond(options,url);\r\n    }\r\n\r\n    delete_all_data(){\r\n        const url = \"http://localhost:8020/breached/\"+this.email+\"/\"+this.token ;\r\n        const options = {method:\"DELETE\"};\r\n        return  this.fetch_and_respond(options,url);\r\n    }\r\n\r\n    send_profile_to_all(profile_name, type){\r\n        const options = {method:\"GET\"};\r\n        const base_url = \"http://localhost:8020/send-profile-to-all/\" + this.email+\"/\"+this.token;\r\n        if(type == \"all\"){//send all profiles to all contacts\r\n           return this.fetch_and_respond(options,base_url);\r\n        }\r\n        else{//send one profile to all contacts\r\n            const all_url = base_url+\"/\"+profile_name;\r\n            return  this.fetch_and_respond(options,all_url);\r\n        }\r\n\r\n\r\n    }\r\n    add_contact(contact_email){\r\n        const url = \"http://localhost:8020/add-contact\";\r\n        const contact_request_data = {\r\n            token :localStorage.getItem(\"POITOKEN\"),\r\n            email : localStorage.getItem(\"POIEMAIL\"),\r\n            contacts_email:contact_email\r\n        }\r\n        const options = {\r\n            method:\"POST\",\r\n            body :JSON.stringify(contact_request_data),\r\n            headers: { \"Content-Type\": \"application/json\" }}\r\n        return this.fetch_and_respond(options,url);\r\n\r\n    }\r\n    remove_contact(contact_email){\r\n        const url = \"http://localhost:8020/remove-contact/\" \r\n            +this.token+\"/\"+this.email+\"/\"+contact_email;\r\n        const options = {method:\"DELETE\"};\r\n        return  this.fetch_and_respond(options,url);\r\n    }\r\n     \r\n    async breach(){\r\n        \r\n        var email_result = await this.send_profile_to_all(null , \"all\")\r\n        var delete_result =  await this.delete_all_data();\r\n        if(email_result.status == \"error\" || delete_result.status == \"error\"){\r\n            //user popup\r\n        }\r\n        else{\r\n            //user popup\r\n        }\r\n\r\n    }\r\n    change_display_state(change_fun){\r\n        change_fun(prev=>{\r\n            if(prev == false){\r\n                return true;\r\n            }\r\n            else{\r\n                return false;\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n    convert_file(file,state_changer ){\r\n\t\t//converts image to base 64\r\n\t\t var converter = new FileReader();\r\n\t  \t converter.readAsDataURL(file);\r\n\t     converter.onloadend = function () {\r\n            this.uploaded_image = converter.result;\r\n            this.change_display_state(state_changer); // changing the uploaded status\r\n        \r\n            \r\n            \r\n\t   \t\t\t\r\n\t}\r\n}\r\n    check_cud_response(response){\r\n        if (response.status==\"success\") {\r\n                this.change_display_state(this.success_modifier);\r\n                return true;\r\n        }\r\n        else{\r\n                this.change_display_state(this.error_modifier);\r\n                return false;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default function HubPage(params) {\r\n    \r\n    const [person , changeperson] = useState(null);\r\n    const [all_persons , addperson] = useState(null)\r\n    const [contacts_display_state , change_contacts_display_state] = useState(false);\r\n    const [breach_display_state , change_breach_display_state] = useState(false);\r\n    const [add_contact_display_state, change_add_contact_display_state] = useState(false);\r\n    const [new_entry_display_state , change_new_entry_display_state] = useState(false);\r\n    const [new_person_display_state, change_new_person_display_state]= useState(false);\r\n    const [image_state , change_image_state] = useState(false);   \r\n    const [Contacts , addcontact] = useState([]);\r\n    const [entry ,change_selected_entry] = useState(null)\r\n    const [success_dialog_state , change_success_dialog_state] = useState(false);\r\n    const [error_dialog_state , change_error_dialog_state] = useState(false);\r\n    var Interface = new Client(\r\n                    params,change_success_dialog_state,\r\n                    change_error_dialog_state)\r\n\r\n    useEffect(async()=>{\r\n\r\n\r\n        const data = await Interface.profile_data()\r\n        console.log(data)\r\n        addperson(()=>{\r\n            if (data.status == \"error\") {\r\n                return null\r\n            }\r\n            else{\r\n                return data.data.persons\r\n            }\r\n            \r\n            \r\n            })\r\n        addcontact((prev)=>{\r\n            if (data.status == \"error\") {\r\n                return null\r\n                \r\n            }\r\n            else{\r\n                if (data.data.contacts == null || typeof data.data.contacts ===\"undefined\" ) {\r\n                    return null\r\n                }\r\n                else{\r\n                    return data.data.contacts\r\n                }\r\n        }\r\n        })\r\n\r\n    },[])\r\n   \r\n\r\n    \r\n        return (\r\n            \r\n            \r\n            <div id = \"hub_main_wrapper\">    \r\n                <Profilesummary \r\n                    actions = {Interface} \r\n                    entry_popup_display_selector = {change_new_entry_display_state}\r\n                    person = {person}/>\r\n                <Entryhubview change_selected_entry = {change_selected_entry} person = {person}/>\r\n                \r\n                <Profileviewheader\r\n                 persons = {all_persons} \r\n                 display_selector = {changeperson} \r\n                 />\r\n\r\n                <DetailsView entry = {entry}/>\r\n                <StatsBar \r\n                    data = {all_persons} \r\n                    contacts = {Contacts}\r\n                    person_popup_display_selector ={change_new_person_display_state}\r\n                />\r\n                <Accountbar \r\n                        contacts_display_controller = {change_contacts_display_state}  \r\n                        actions = {Interface} \r\n\r\n                        breach_display_controller = {change_breach_display_state}\r\n                />\r\n                <Newpersonpopup \r\n                        actions = {Interface}\r\n                        self_state_controller = {change_new_person_display_state}\r\n                        state = {new_person_display_state}\r\n                        image_state = {image_state}\r\n                        image_state_controller = {change_image_state}\r\n                />    \r\n                <Newentrypopup \r\n                        actions = {Interface}\r\n                        person = {person}\r\n                        self_state_controller = {change_new_entry_display_state}\r\n                        state = {new_entry_display_state}\r\n                />\r\n                <Confirmbreachpopup \r\n                        actions = {Interface}\r\n                        state = {breach_display_state}\r\n                        self_state_controller = {change_breach_display_state}\r\n                />    \r\n                <ContactsPopup \r\n                        add_state_controller = {change_add_contact_display_state} \r\n                        self_state_controller = {change_contacts_display_state} \r\n                        data = {Contacts}\r\n                        state= {contacts_display_state}  \r\n                        actions = {Interface} \r\n                        all_modifier = {addcontact}\r\n                />\r\n                <Createcontactspopup \r\n                        state= {add_contact_display_state} \r\n                        self_state_controller = {change_add_contact_display_state}\r\n                        all_modifier = {addcontact}\r\n                        actions = {Interface}\r\n                />    \r\n                <ErrorDialog\r\n                        state = {error_dialog_state}\r\n                        self_state_controller = {change_error_dialog_state}\r\n                        actions = {Interface}\r\n\r\n                />\r\n                <SuccessDialog\r\n                      state = {success_dialog_state}\r\n                      self_state_controller = {change_success_dialog_state}\r\n                      actions = {Interface}\r\n                \r\n                />\r\n            </div>\r\n                \r\n        )\r\n    \r\n}\r\n","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\entryhubview.js",[],"C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\profilesummary.js",["124","125","126","127","128","129","130","131","132"],"import React from 'react'\r\n\r\nexport default function Profilesummary({person , actions,entry_popup_display_selector}) {\r\n\r\n   \r\n    \r\n    if(person != null){\r\n        const name = Object.keys(person);\r\n        const first_and_last = String(name[0]).split(\"-\");\r\n        if(person.image){\r\n            return (\r\n                <div id= \"profile_summary\">\r\n                    <div id = \"profile_summary_header\">\r\n                        <img id = \"Main_Profile_Image\" src= {person[name].image}>\r\n                        </img>\r\n                    </div>\r\n                    <div id = \"profile_summary_footer\">\r\n                        <h3>{\"First:\" +first_and_last[0] }</h3>\r\n                        <h3>{\"Last:\" + first_and_last[1]}</h3>\r\n                        <h3>{\"Height:\" + person[name].height}</h3>\r\n                        <h3>{\"Location:\" + person[name].location}</h3>\r\n                        <h3>{\"Race/Skin Tone:\" + person[name].race}</h3>\r\n                        <button id = \"add_entry_button\" \r\n                            onClick = {\r\n                                ()=>{actions.change_display_state(entry_popup_display_selector)}\r\n                            }   \r\n                            >New Entry\r\n                        </button>\r\n                        <div>\r\n                            <button id = \"editbutton\"><img id= \"editImage\" src = \"../Images/pencil.png\"></img></button>\r\n                            <button id = \"deletebutton\"><img id= \"deleteImage\" src = \"../Images/trash.png\"></img></button>\r\n                            <button id = \"sharebutton\">Share Profile</button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n            )\r\n                }\r\n\r\n\r\n\r\n        else{\r\n                    return(\r\n                    <div id= \"profile_summary\">\r\n                    <div id = \"profile_summary_header\">\r\n                        <img id = \"Main_Profile_Image\" src= \"../Images/defaultimage.png\">\r\n                        </img>\r\n                    </div>\r\n                    <div id = \"profile_summary_footer\">\r\n                        <h3>{\"First:\" +first_and_last[0] }</h3>\r\n                        <h3>{\"Last:\" + first_and_last[1]}</h3>\r\n                        <h3>{\"Height:\" + person[name].height}</h3>\r\n                        <h3>{\"Location:\" + person[name].location}</h3>\r\n                        <h3>{\"Race/Skin Tone:\" + person[name].race}</h3>\r\n                        <button id = \"add_entry_button\" \r\n                            onClick = {\r\n                                function(){actions.change_display_state(entry_popup_display_selector)}\r\n                            }   \r\n                            >New Entry\r\n                        </button>\r\n                        <div>\r\n                            <button id = \"editbutton\"><img id= \"editImage\" src = \"../Images/pencil.png\"></img></button>\r\n                            <button id = \"deletebutton\"><img id= \"deleteImage\" src = \"../Images/trash.png\"></img></button>\r\n                            <button id = \"sharebutton\">Share Profile</button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                    )\r\n                    \r\n                }\r\n            }\r\n            \r\n    else{\r\n        \r\n        return (\r\n\r\n\r\n            <div id= \"profile_summary\">\r\n            <div id = \"profile_summary_header\">\r\n                <img id = \"Main_Profile_Image\" src= \"../Images/defaultimage.png\">\r\n                </img>\r\n            </div>\r\n            <div id = \"profile_summary_footer\">\r\n                <h1>No Person Selected</h1>\r\n                <div>\r\n                    <button id = \"editbutton\"><img id= \"editImage\" src = \"../Images/pencil.png\"></img></button>\r\n                    <button id = \"deletebutton\"><img id= \"deleteImage\" src = \"../Images/trash.png\"></img></button>\r\n                    <button id = \"sharebutton\">Share Profile</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\entrydetailsview.js",["133","134","135"],"import React from 'react'\r\n\r\nexport default function DetailsView({entry}) {\r\n    if (entry) {\r\n        const label = Object.keys(entry)\r\n        console.log(entry)\r\n        return(\r\n        <div id= \"EntryDetailedView\">\r\n            <div id = \"DetailedHeader\">\r\n                <h3>Entry Details</h3>\r\n            </div>\r\n            <div id= \"ActualDetails\">\r\n                <div id =\"details_level_img_wrapper\" >\r\n                    <img id= \"details_level_img\" src = {\"../Images/level\"+entry.threat_level+\".png\"}></img>\r\n                </div>\r\n                <h3 id = \"entry_date\">{entry.date}</h3>\r\n                <h3 id = \"threat_level\">{\"Threat Level:\" + entry.threat_level}</h3>\r\n                <div id = \"entry_details_wrapper\">\r\n                    <p id = \"entry_details\">{entry.data}</p>\r\n            </div>\r\n                \r\n                    \r\n            \r\n            </div>\r\n            \r\n        </div>\r\n        )\r\n      \r\n    }\r\n    else{\r\n        return (\r\n            <div id= \"EntryDetailedView\">\r\n                <div id = \"DetailedHeader\">\r\n                    <h3>Entry Details</h3>\r\n                </div>\r\n                <div id= \"ActualDetails\">\r\n                    <div id =\"details_level_img_wrapper\" >\r\n                        <img id= \"details_level_img\" src = \"../Images/level1.png\"></img>\r\n                    </div>\r\n                    <h3 id = \"entrynickname\" >Label</h3>\r\n                    <h3 id = \"entry_date\">Date</h3>\r\n                    <h3 id = \"threat_level\">Threat Level</h3>\r\n                    <div id = \"entry_details_wrapper\">\r\n                        <p id = \"entry_details\">Details</p>\r\n                    </div>\r\n                    \r\n                        \r\n                \r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\statsbar.js",[],"C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\accountbar.js",["136"],"import React from 'react'\r\n\r\nexport default function Accountbar({actions, contacts_display_controller ,breach_display_controller}) {\r\n    \r\n    const check_logout_status = async function(){\r\n        const response = await actions.logout()\r\n        if(response.status == \"error\"){\r\n            //popup\r\n        }\r\n        else{\r\n            //popup\r\n        }   \r\n    }\r\n    \r\n    return (\r\n        <div id = \"accountbar\">\r\n            <button id = \"logoutbutton\" onClick = {check_logout_status}> Logout </button>\r\n            <button id = \"contactsbutton\" onClick = {function(){actions.change_display_state(contacts_display_controller)}}>Contacts</button>\r\n            <button id = \"breachbutton\"onClick = {function(){actions.change_display_state(breach_display_controller)}} >Breach(Very Dangerous)</button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\newpersonpopup.js",["137"],"C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\Newentrypopup.js",["138","139"],"C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\Confirmbreachpopup.js",[],"C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\ContactsPopup.js",[],"C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\Createcontactspopup.js",["140","141"],"C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\profileviewheader.js",["142","143","144","145"],"\r\n\r\nimport React from 'react'\r\nimport Profileviewchild from './profileviewchild'\r\n\r\n\r\nexport default function Profileviewheader({persons,display_selector}) {\r\n\r\n   \r\n    console.log(persons)\r\n    if(persons == null ){\r\n       \r\n        return(\r\n            <div id = \"profileview\">\r\n            <div id = \"profile_view_header\">\r\n                <h1 id = \"current_profiles_label\">Current Profiles</h1>\r\n                <img id = \"current_profiles_logo\" src = \"/Images/buttonlogo.jpg\"></img>\r\n                <img id = \"current_profiles_logo2\" src = \"/Images/authlogo.png\"></img>\r\n            </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n    else{\r\n        const names = Object.keys(persons);\r\n        return (\r\n        \r\n            <div id = \"profileview\">\r\n            <div id = \"profile_view_header\">\r\n                <h1 id = \"current_profiles_label\">Current Profiles</h1>\r\n                <img id = \"current_profiles_logo\" src = \"/Images/buttonlogo.jpg\"></img>\r\n                <img id = \"current_profiles_logo2\" src = \"/Images/authlogo.png\"></img>\r\n            </div>\r\n             {\r\n                 names.map(name=>{\r\n                   return  <Profileviewchild \r\n                                key = {name} \r\n                                person_data = {persons[name]}  \r\n                                person_name = {name} \r\n                                change_selected = {display_selector}/>\r\n\r\n                 })\r\n            \r\n            }\r\n             \r\n            </div>\r\n\r\n        \r\n    \r\n    \r\n   \r\n    \r\n     \r\n    \r\n    )\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\profileviewchild.js",["146","147"],"import React from 'react'\r\n\r\nexport default function Profileviewchild({person_data,person_name,change_selected}) {\r\n        const image = person_data.image\r\n        if(typeof image === \"undefined\"){\r\n            return (\r\n                <div className = \"PersonsWrapper\" >\r\n                    <img className = \"PersonsImages\"onClick = {\r\n\r\n                    function(){change_selected(prev=>{\r\n                        return {[person_name]:person_data};\r\n                    })}\r\n\r\n                }  src = \"../Images/defaultimage.png\"></img>\r\n                    <h1 className = \"PersonsNames\">{person_name}</h1>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    <img src = {image}></img>\r\n                    <h1>{person_name}</h1>\r\n                </div>\r\n            ) \r\n            \r\n        }\r\n  \r\n\r\n    \r\n\r\n}\r\n","C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\contactschild.js",[],"C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\Contactschild.js",[],"C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\Entrylistingchild.js",[],"C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\ErrorDialog.js",[],"C:\\Users\\ronald\\Git\\Git Repos\\POI-WebApp\\React-Poi\\src\\SuccessDialog.js",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":7,"column":26,"nodeType":"154","messageId":"155","endLine":7,"endColumn":28},{"ruleId":"152","severity":1,"message":"153","line":18,"column":26,"nodeType":"154","messageId":"155","endLine":18,"endColumn":28},{"ruleId":"152","severity":1,"message":"153","line":28,"column":17,"nodeType":"154","messageId":"155","endLine":28,"endColumn":19},{"ruleId":"156","severity":1,"message":"157","line":75,"column":5,"nodeType":"158","endLine":75,"endColumn":51},{"ruleId":"156","severity":1,"message":"157","line":76,"column":5,"nodeType":"158","endLine":76,"endColumn":54},{"ruleId":"156","severity":1,"message":"157","line":102,"column":1,"nodeType":"158","endLine":102,"endColumn":47},{"ruleId":"156","severity":1,"message":"157","line":106,"column":5,"nodeType":"158","endLine":106,"endColumn":55},{"ruleId":"156","severity":1,"message":"157","line":118,"column":5,"nodeType":"158","endLine":118,"endColumn":60},{"ruleId":"156","severity":1,"message":"157","line":130,"column":5,"nodeType":"158","endLine":130,"endColumn":56},{"ruleId":"152","severity":1,"message":"153","line":145,"column":47,"nodeType":"154","messageId":"155","endLine":145,"endColumn":49},{"ruleId":"152","severity":1,"message":"153","line":146,"column":46,"nodeType":"154","messageId":"155","endLine":146,"endColumn":48},{"ruleId":"156","severity":1,"message":"157","line":161,"column":9,"nodeType":"158","endLine":161,"endColumn":61},{"ruleId":"152","severity":1,"message":"153","line":172,"column":60,"nodeType":"154","messageId":"155","endLine":172,"endColumn":62},{"ruleId":"152","severity":1,"message":"153","line":173,"column":59,"nodeType":"154","messageId":"155","endLine":173,"endColumn":61},{"ruleId":"156","severity":1,"message":"157","line":184,"column":9,"nodeType":"158","endLine":184,"endColumn":62},{"ruleId":"152","severity":1,"message":"153","line":70,"column":17,"nodeType":"154","messageId":"155","endLine":70,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":105,"column":32,"nodeType":"154","messageId":"155","endLine":105,"endColumn":34},{"ruleId":"152","severity":1,"message":"153","line":105,"column":67,"nodeType":"154","messageId":"155","endLine":105,"endColumn":69},{"ruleId":"152","severity":1,"message":"153","line":115,"column":21,"nodeType":"154","messageId":"155","endLine":115,"endColumn":23},{"ruleId":"152","severity":1,"message":"153","line":139,"column":28,"nodeType":"154","messageId":"155","endLine":139,"endColumn":30},{"ruleId":"159","severity":1,"message":"160","line":170,"column":15,"nodeType":"161","endLine":200,"endColumn":6},{"ruleId":"152","severity":1,"message":"153","line":176,"column":29,"nodeType":"154","messageId":"155","endLine":176,"endColumn":31},{"ruleId":"152","severity":1,"message":"153","line":186,"column":29,"nodeType":"154","messageId":"155","endLine":186,"endColumn":31},{"ruleId":"159","severity":1,"message":"162","line":200,"column":7,"nodeType":"163","endLine":200,"endColumn":9,"suggestions":"164"},{"ruleId":"156","severity":1,"message":"157","line":14,"column":25,"nodeType":"158","endLine":14,"endColumn":82},{"ruleId":"156","severity":1,"message":"157","line":30,"column":55,"nodeType":"158","endLine":30,"endColumn":105},{"ruleId":"156","severity":1,"message":"157","line":31,"column":57,"nodeType":"158","endLine":31,"endColumn":108},{"ruleId":"156","severity":1,"message":"157","line":47,"column":25,"nodeType":"158","endLine":47,"endColumn":90},{"ruleId":"156","severity":1,"message":"157","line":63,"column":55,"nodeType":"158","endLine":63,"endColumn":105},{"ruleId":"156","severity":1,"message":"157","line":64,"column":57,"nodeType":"158","endLine":64,"endColumn":108},{"ruleId":"156","severity":1,"message":"157","line":82,"column":17,"nodeType":"158","endLine":82,"endColumn":82},{"ruleId":"156","severity":1,"message":"157","line":88,"column":47,"nodeType":"158","endLine":88,"endColumn":97},{"ruleId":"156","severity":1,"message":"157","line":89,"column":49,"nodeType":"158","endLine":89,"endColumn":100},{"ruleId":"165","severity":1,"message":"166","line":5,"column":15,"nodeType":"167","messageId":"168","endLine":5,"endColumn":20},{"ruleId":"156","severity":1,"message":"157","line":14,"column":21,"nodeType":"158","endLine":14,"endColumn":102},{"ruleId":"156","severity":1,"message":"157","line":38,"column":25,"nodeType":"158","endLine":38,"endColumn":83},{"ruleId":"152","severity":1,"message":"153","line":7,"column":28,"nodeType":"154","messageId":"155","endLine":7,"endColumn":30},{"ruleId":"156","severity":1,"message":"157","line":43,"column":21,"nodeType":"158","endLine":43,"endColumn":57},{"ruleId":"156","severity":1,"message":"157","line":31,"column":16,"nodeType":"158","endLine":31,"endColumn":76},{"ruleId":"156","severity":1,"message":"157","line":35,"column":17,"nodeType":"158","endLine":35,"endColumn":81},{"ruleId":"152","severity":1,"message":"153","line":13,"column":61,"nodeType":"154","messageId":"155","endLine":13,"endColumn":63},{"ruleId":"169","severity":1,"message":"170","line":19,"column":23,"nodeType":"171","messageId":"172","endLine":21,"endColumn":22},{"ruleId":"156","severity":1,"message":"157","line":17,"column":17,"nodeType":"158","endLine":17,"endColumn":82},{"ruleId":"156","severity":1,"message":"157","line":18,"column":17,"nodeType":"158","endLine":18,"endColumn":81},{"ruleId":"156","severity":1,"message":"157","line":31,"column":17,"nodeType":"158","endLine":31,"endColumn":82},{"ruleId":"156","severity":1,"message":"157","line":32,"column":17,"nodeType":"158","endLine":32,"endColumn":81},{"ruleId":"156","severity":1,"message":"157","line":8,"column":21,"nodeType":"158","endLine":14,"endColumn":55},{"ruleId":"156","severity":1,"message":"157","line":22,"column":21,"nodeType":"158","endLine":22,"endColumn":40},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'Interface'. Either include it or remove the dependency array.","ArrayExpression",["175"],"no-unused-vars","'label' is assigned a value but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},"Update the dependencies array to be: [Interface]",{"range":"178","text":"179"},[6974,6976],"[Interface]"]